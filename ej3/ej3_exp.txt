Para comprender la resolución del ejercicio 3, es importante entender primero el problema.

En este caso, el enunciado hace referencia a una "instancia particular" de un cripto algoritmo, en si se el enunciado
busca que implementamos un algoritmo que verifique la validez de la siguiente suma de palabras:

FELIZ + DIA + DEL = PADRE

Esta suma esta tiene ciertas restricciones/observaciones:

    Cada letra representa un dígito distinto del 0 al 9. Es decir, no puede haber dos letras que compartan el 
    mismo valor numérico, la llamaremos restricción (1).

    Al reemplazar cada letra por su dígito correspondiente y calcular el valor numérico de cada palabra 
    (considerando la posición de cada letra —unidades, decenas, centenas, etc.— por ejemplo, si F = 3, 
    entonces FELIZ comienza con 3 * 10000), la suma de FELIZ + DIA + DEL debe ser igual al valor numérico 
    de PADRE, la llamaremos restricción (2).

    Las letras iniciales de las palabras FELIZ, DIA y PADRE no pueden representar el dígito 0, la llamaremos
    resolución (3).

Una vez comprendido el problema, pasamos a su resolución en Prolog. Podemos observar en si que en la resolucion
señale la seccion del problema que busca resolver las restricciones planteadas anteriormente. En la solucion de R1
se implementación dandole un dominio a las variables de entrada y la restruccion que tengan valores distintas entre
ellas para eso se utiliza el metodo "all_distinct(ListaDeVariables)". En la solucion de R2 se plantea la restriccion 
con el simbolo visto en clase "#=", en este caso la igual entre la suma de las 3 palabras (con su adecuado valor) y
el valor numero de la palabra PADRE. En la solucion de R3 se usa el mismo simbolo de restriccion pero en vez de igual 
con distinto. Finalmente se usa el metodo "label(ListaDeVariables)" en si el metodo lo que hace es asignarle valores 
a las variables de lista y comproba que se cumplan las restricciones dadas en R1,R2 y R3, si por ejemplo hay alguna 
asignacion que no lo cumple este predicado vuelve para atras (backtraking) y asigna otro valor, para luego nuevamente
verificas si se cumplem las restrucciones. 

Como observacion estos metodos y las recciones se puede utilizar por la importacion de la libreria "clpfd".


------------------------------------------------- Ejercicio Extra 3 -------------------------------------------------

En si la explicacion es muy parecida, lo unico que cambia la instancia en espeficio del problem, en este caso se 
busca que implementamos un algoritmo que verifique la validez de la siguiente suma de palabras:

FELIZ + FELIZ + DIA  = MAMÁS

Con las mismas restricciones pero lo que cambia es que en este caso por ejemplo hay 2 palabras repetidas, y una letras
que parece igual pero no lo es la cual es Á. 
