El algoritmo comienza representando las posiciones de las piezas de ajedrez
(reina, alfil, caballo y torre) mediante variables que indican sus filas y
columnas dentro del tablero 8x8. Para facilitar la verificación de que no
ocupen la misma casilla, estas posiciones se linealizan a valores del 1 al 64,
y se impone que todas sean distintas.

Luego, se define una lista de casillas marcadas, cada una con su ubicación
(fila y columna) y la cantidad exacta de piezas que deben atacarla. Estas
casillas representan las restricciones del problema.

A continuación, se aplica un módulo auxiliar que evalúa, para cada casilla
marcada, si es atacada por cada una de las piezas. Se utilizan las reglas
clásicas del ajedrez para definir el ataque: la reina ataca si comparte fila,
columna o diagonal; el alfil si está en una diagonal; el caballo si está a una
distancia tipo L (2x1 o 1x2); y la torre si comparte fila o columna. Cada
posible ataque se representa con una variable booleana.

Se suma el total de ataques por casilla y se fuerza a que coincida con el valor
indicado. Una vez aplicadas todas las restricciones, se realiza el proceso de
búsqueda (labeling) para encontrar los valores concretos que cumplen con todas
las condiciones. Finalmente, se devuelven las posiciones de las piezas de forma
legible.
